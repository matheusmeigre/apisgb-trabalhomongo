### API de Gerenciamento de Biblioteca - Testes
### Servidor: http://localhost:3000

### =======================
### ENDPOINT RAIZ
### =======================

### Verificar status da API
GET http://localhost:3000
Content-Type: application/json

### =======================
### USUÁRIOS
### =======================

### Cadastrar usuário 1
POST http://localhost:3000/users
Content-Type: application/json

{
  "name": "Phablo Ribeiro",
  "birthDate": "2002-08-14",
  "sex": "Masculino",
  "address": "Rua Jota Lacerda, 80, Cataguases - MG"
}

### Cadastrar usuário 2
POST http://localhost:3000/users
Content-Type: application/json

{
  "name": "Karina Alves",
  "birthDate": "2006-11-04",
  "sex": "Feminino",
  "address": "Rua Antônio Martins Mendes, 287, Cataguases - MG"
}

### Tentar cadastrar usuário duplicado (deve falhar)
POST http://localhost:3000/users
Content-Type: application/json

{
  "name": "Phablo Ribeiro",
  "birthDate": "1992-03-10",
  "sex": "Masculino",
  "address": "Outra rua, 789, Belo Horizonte - MG"
}

### Listar todos os usuários
GET http://localhost:3000/users
Content-Type: application/json

### =======================
### AUTORES
### =======================

### Cadastrar autor 1
POST http://localhost:3000/authors
Content-Type: application/json

{
  "name": "Machado de Assis",
  "birthDate": "1839-06-21",
  "sex": "Masculino",
  "writingGenre": "Fiction"
}

### Cadastrar autor 2
POST http://localhost:3000/authors
Content-Type: application/json

{
  "name": "Clarice Lispector",
  "birthDate": "1920-12-10",
  "sex": "Feminino",
  "writingGenre": "Novel"
}

### Cadastrar autor 3
POST http://localhost:3000/authors
Content-Type: application/json

{
  "name": "Agatha Christie",
  "birthDate": "1890-09-15",
  "sex": "Feminino",
  "writingGenre": "Mystery"
}

### Tentar cadastrar autor com gênero inválido (deve falhar)
POST http://localhost:3000/authors
Content-Type: application/json

{
  "name": "Autor Teste",
  "birthDate": "1980-01-01",
  "sex": "Masculino",
  "writingGenre": "Romance"
}

### Tentar cadastrar autor duplicado (deve falhar)
POST http://localhost:3000/authors
Content-Type: application/json

{
  "name": "Machado de Assis",
  "birthDate": "1839-06-21",
  "sex": "Masculino",
  "writingGenre": "Poetry"
}

### Listar todos os autores
GET http://localhost:3000/authors
Content-Type: application/json

### =======================
### LIVROS
### =======================

### Cadastrar livro 1 (substitua AUTHOR_ID_1 pelo ID real do Machado de Assis)
POST http://localhost:3000/books
Content-Type: application/json

{
  "title": "Dom Casmurro",
  "synopsis": "Romance que narra a história de Bentinho e Capitu, explorando temas como ciúme e desconfiança.",
  "year": 1899,
  "author": "68ff6cc500549f2833d18fa4"
}

### Cadastrar livro 2 (substitua AUTHOR_ID_2 pelo ID real da Clarice Lispector)
POST http://localhost:3000/books
Content-Type: application/json

{
  "title": "A Hora da Estrela",
  "synopsis": "A história de Macabéa, uma jovem nordestina que vive no Rio de Janeiro.",
  "year": 1977,
  "author": "68ff6ccc00549f2833d18fa7"
}

### Cadastrar livro 3 (substitua AUTHOR_ID_3 pelo ID real da Agatha Christie)
POST http://localhost:3000/books
Content-Type: application/json

{
  "title": "Assassinato no Expresso do Oriente",
  "synopsis": "Hercule Poirot investiga um assassinato em um trem preso na neve.",
  "year": 1934,
  "author": "68ff6cd800549f2833d18faa"
}

### Tentar cadastrar livro com autor inexistente (deve falhar)
POST http://localhost:3000/books
Content-Type: application/json

{
  "title": "Livro Teste",
  "synopsis": "Sinopse do livro teste",
  "year": 2023,
  "author": "507f1f77bcf86cd799439011"
}

### Listar todos os livros
GET http://localhost:3000/books
Content-Type: application/json

### =======================
### EMPRÉSTIMOS
### =======================

### Realizar empréstimo 1 (substitua pelos IDs reais)
POST http://localhost:3000/loans
Content-Type: application/json

{
  "bookId": "68ff6d8100549f2833d18fb0",
  "userId": "68ff6c7b00549f2833d18f9c"
}

### Realizar empréstimo 2 (substitua pelos IDs reais)
POST http://localhost:3000/loans
Content-Type: application/json

{
  "bookId": "68ff6d8600549f2833d18fb5",
  "userId": "68ff6c9a00549f2833d18f9f"
}

### Tentar emprestar livro já emprestado (deve falhar)
POST http://localhost:3000/loans
Content-Type: application/json

{
  "bookId": "68ff6d8100549f2833d18fb0",
  "userId": "68ff6c9a00549f2833d18f9f"
}

### Tentar empréstimo com usuário inexistente (deve falhar)
POST http://localhost:3000/loans
Content-Type: application/json

{
  "bookId": "68ff6d8600549f2833d18fb5",
  "userId": "507f1f77bcf86cd799439011"
}

### Tentar empréstimo com livro inexistente (deve falhar)
POST http://localhost:3000/loans
Content-Type: application/json

{
  "bookId": "507f1f77bcf86cd799439011",
  "userId": "68ff6c7b00549f2833d18f9c"
}

### =======================
### TESTES ADICIONAIS
### =======================

### Teste com campos obrigatórios faltando - Usuário
POST http://localhost:3000/users
Content-Type: application/json

{
  "name": "Nome Teste",
  "birthDate": "1990-01-01"
}

### Teste com campos obrigatórios faltando - Autor
POST http://localhost:3000/authors
Content-Type: application/json

{
  "name": "Autor Teste",
  "birthDate": "1980-01-01"
}

### Teste com campos obrigatórios faltando - Livro
POST http://localhost:3000/books
Content-Type: application/json

{
  "title": "Livro Teste",
  "year": 2023
}

### Teste com campos obrigatórios faltando - Empréstimo
POST http://localhost:3000/loans
Content-Type: application/json

{
  "bookId": "68ff6d8100549f2833d18fb0"
}

### Obter IDs dos autores após cadastro:
GET http://localhost:3000/authors

### Obter IDs dos usuários após cadastro:
GET http://localhost:3000/users

### Obter IDs dos livros após cadastro:
GET http://localhost:3000/books